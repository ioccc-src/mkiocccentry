/*
 * chk_sem_auth - check .auth.json semantics
 *
 * "Because grammar and syntax alone do not make a complete language." :-)
 *
 * The concept of this file was developed by:
 *
 *	chongo (Landon Curt Noll, http://www.isthe.com/chongo/index.html) /\oo/\
 *
 * and it was auto-generated by:
 *
 *	make chk_sem_auth.h
 *
 * The JSON parser and this tool were co-developed in 2022 by:
 *
 *	@xexyl
 *	https://xexyl.net		Cody Boone Ferguson
 *	https://ioccc.xexyl.net
 * and:
 *	chongo (Landon Curt Noll, http://www.isthe.com/chongo/index.html) /\oo/\
 *
 * "Because sometimes even the IOCCC Judges need some help." :-)
 *
 * "Share and Enjoy!"
 *     --  Sirius Cybernetics Corporation Complaints Division, JSON spec department. :-)
 */


#if !defined(INCLUDE_CHK_SEM_AUTH_H)
#    define  INCLUDE_CHK_SEM_AUTH_H


/*
 * json_sem - JSON semantics support
 */
#include "../jparse/json_sem.h"


#if !defined(SEM_AUTH_LEN)

#define SEM_AUTH_LEN (40)

extern struct json_sem sem_auth[SEM_AUTH_LEN+1];

extern bool chk_affiliation(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_author_handle(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_author_number(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_default_handle(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_email(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_github(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_location_code(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_mastodon(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_name(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_past_winning_author(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_url(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_alt_url(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_IOCCC_auth_version(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_IOCCC_contest(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_IOCCC_contest_id(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_IOCCC_year(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_author_count(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_authors(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_chksubmit_version(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_fnamchk_version(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_formed_timestamp(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_formed_timestamp_usec(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_min_timestamp(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_mkiocccentry_version(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_no_comment(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_submit_slot(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_tarball(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_test_mode(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);
extern bool chk_timestamp_epoch(struct json const *node,
	unsigned int depth, struct json_sem *sem, struct json_sem_val_err **val_err);

#endif /* SEM_AUTH_LEN */


#endif /* INCLUDE_CHK_SEM_AUTH_H */
